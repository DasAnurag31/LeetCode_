# MinSize Subarray Sum | Sliding Window
## Algo:
* Itterate and keep adding in the window from the right
* When the sum of the window becomes greater than the target
	* store the length in min 
	* reduce the sum by removing from the left and cal each new min
* Return the min if it has changed from the initial value;
## Code:
```
class Solution {
    public int minSubArrayLen(int target, int[] nums) {
        int i=0;
        int j=0;
        int min=Integer.MAX_VALUE;
        int sum=0;
        while(j<nums.length){
            sum+=nums[j];
            if(sum>=target){
                while(sum>=target){
                    min=Math.min(min,j-i+1);
                    sum-=nums[i];
                    i++;
                }
            }
            j++;
        }
        if(min==Integer.MAX_VALUE)
            return 0;
        else
            return min;
    }
}
```
